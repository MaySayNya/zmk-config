/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  | DEL  |
            // | TAB  |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  | BKSP |
            // | CTRL |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
            //                    | GUI | LWR | SPC  |   | SHFT | RSE  | ALT |

            bindings = <
&kp ESC           &kp Q  &kp W  &kp E          &kp R  &kp T        &kp Y          &kp U  &kp I         &kp O    &kp P     &kp DELETE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D          &kp F  &kp G        &kp H          &kp J  &kp K         &kp L    &kp SEMI  &kp TAB
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C          &kp V  &kp B        &kp N          &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RET
                                &kp LEFT_META  &sl 1  &kp SPACE    &kp BACKSPACE  &sl 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |       |
            // |      | LFT | DWN |  UP | RGT |     |   |     |     |     | F11 | F12 |       |
            // |      | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |       |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp N1        &kp N2            &kp N3              &kp N4      &kp N5               &kp N6  &kp N7  &kp N8  &kp N9   &kp N0   &trans
&trans  &kp LEFT      &kp DOWN          &kp UP              &kp RIGHT   &kp C_VOLUME_UP      &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans  &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp C_MUTE  &kp C_VOLUME_DOWN    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                                        &trans              &trans      &trans               &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
            // |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
            // |      |  '  |  `  |  "  |  ~  |     |   |  _  |  +  |  {  |  }  | "|" |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp EXCL      &kp AT     &kp HASH           &kp DLLR          &kp PRCNT               &kp CARET  &kp AMPS   &kp ASTERISK   &kp LPAR          &kp RPAR           &trans
&trans  &kp QUESTION  &kp COLON  &kp LESS_THAN      &kp GREATER_THAN  &kp C_BRIGHTNESS_INC    &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &kp SQT       &kp GRAVE  &kp DOUBLE_QUOTES  &kp TILDE         &kp C_BRIGHTNESS_DEC    &kp UNDER  &kp PLUS   &kp PIPE       &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
                                 &trans             &trans            &trans                  &trans     &trans     &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     | C_PWR |
            // |      |     |     |     |     |     |   |     |     |     |     |BTCLR|       |
            // |      |     |     |     |     |     |   | BT1 | BT2 | BT3 | BT4 | BT5 |       |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &soft_off  &trans  &trans  &trans  &trans  &kp C_PWR
&trans      &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans     &trans  &trans  &trans  &trans  &kp K_SLEEP
&trans      &trans         &trans         &trans         &trans         &trans           &trans     &trans  &trans  &trans  &trans  &kp K_LOCK
                                          &trans         &trans         &soft_off        &trans     &trans  &trans
            >;
        };
    };
};
